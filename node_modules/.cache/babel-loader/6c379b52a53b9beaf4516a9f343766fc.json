{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zareennaushad/Documents/FAISAL/ios/Voice Recognition Ecommerce App/Alan_AI_Voice_Recogition_Ecommerce_App/src/context/CartContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage.js\";\nimport storeItems from \"../items.json\";\nconst CartContext = /*#__PURE__*/React.createContext();\nexport function useCart() {\n  _s();\n\n  return useContext(CartContext);\n}\n\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function CartProvider({\n  children\n}) {\n  _s2();\n\n  const [cart, setCart] = useLocalStorage(\"cart\", []);\n  const [showCartItems, setShowCartItems] = useState(false);\n  const formattedCart = cart.map(entry => {\n    return { ...entry,\n      item: storeItems.find(item => item.id === entry.itemId)\n    };\n  });\n  const isCartEmpty = cart.length === 0;\n  useEffect(() => {\n    if (isCartEmpty) setShowCartItems(false);\n  }, [isCartEmpty]);\n\n  function addToCart(itemId, quantity = 1) {\n    setCart(prevCart => {\n      if (prevCart.some(entry => entry.itemId === itemId)) {\n        return prevCart.map(entry => {\n          if (entry.itemId === itemId) return { ...entry,\n            quantity: entry.quantity + quantity\n          };\n          return entry;\n        });\n      } else {\n        return [...prevCart, {\n          itemId,\n          quantity\n        }];\n      }\n    });\n  }\n\n  function removeFromCart(itemId) {\n    setCart(prevCart => {\n      return prevCart.filter(entry => entry.itemId !== itemId);\n    });\n  }\n\n  function checkout() {\n    setCart([]);\n    alert(\"Thank you for your purchase\");\n  }\n\n  const value = {\n    cart: formattedCart,\n    showCart: !isCartEmpty,\n    showCartItems,\n    setShowCartItems,\n    isCartEmpty,\n    addToCart,\n    removeFromCart,\n    checkout\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(CartProvider, \"FF0EGj0wChZPzcrSof0DGf2NsS0=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/zareennaushad/Documents/FAISAL/ios/Voice Recognition Ecommerce App/Alan_AI_Voice_Recogition_Ecommerce_App/src/context/CartContext.js"],"names":["React","useContext","useEffect","useState","useLocalStorage","storeItems","CartContext","createContext","useCart","CartProvider","children","cart","setCart","showCartItems","setShowCartItems","formattedCart","map","entry","item","find","id","itemId","isCartEmpty","length","addToCart","quantity","prevCart","some","removeFromCart","filter","checkout","alert","value","showCart"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAOP,UAAU,CAACK,WAAD,CAAjB;AACD;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,eAAe,CAAC,MAAD,EAAS,EAAT,CAAvC;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMY,aAAa,GAAGJ,IAAI,CAACK,GAAL,CAASC,KAAK,IAAI;AACtC,WAAO,EAAE,GAAGA,KAAL;AAAYC,MAAAA,IAAI,EAAEb,UAAU,CAACc,IAAX,CAAgBD,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYH,KAAK,CAACI,MAA1C;AAAlB,KAAP;AACD,GAFqB,CAAtB;AAGA,QAAMC,WAAW,GAAGX,IAAI,CAACY,MAAL,KAAgB,CAApC;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,WAAJ,EAAiBR,gBAAgB,CAAC,KAAD,CAAhB;AAClB,GAFQ,EAEN,CAACQ,WAAD,CAFM,CAAT;;AAIA,WAASE,SAAT,CAAmBH,MAAnB,EAA2BI,QAAQ,GAAG,CAAtC,EAAyC;AACvCb,IAAAA,OAAO,CAACc,QAAQ,IAAI;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcV,KAAK,IAAIA,KAAK,CAACI,MAAN,KAAiBA,MAAxC,CAAJ,EAAqD;AACnD,eAAOK,QAAQ,CAACV,GAAT,CAAaC,KAAK,IAAI;AAC3B,cAAIA,KAAK,CAACI,MAAN,KAAiBA,MAArB,EACE,OAAO,EAAE,GAAGJ,KAAL;AAAYQ,YAAAA,QAAQ,EAAER,KAAK,CAACQ,QAAN,GAAiBA;AAAvC,WAAP;AACF,iBAAOR,KAAP;AACD,SAJM,CAAP;AAKD,OAND,MAMO;AACL,eAAO,CAAC,GAAGS,QAAJ,EAAc;AAAEL,UAAAA,MAAF;AAAUI,UAAAA;AAAV,SAAd,CAAP;AACD;AACF,KAVM,CAAP;AAWD;;AAED,WAASG,cAAT,CAAwBP,MAAxB,EAAgC;AAC9BT,IAAAA,OAAO,CAACc,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACG,MAAT,CAAgBZ,KAAK,IAAIA,KAAK,CAACI,MAAN,KAAiBA,MAA1C,CAAP;AACD,KAFM,CAAP;AAGD;;AAED,WAASS,QAAT,GAAoB;AAClBlB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAmB,IAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;;AAED,QAAMC,KAAK,GAAG;AACZrB,IAAAA,IAAI,EAAEI,aADM;AAEZkB,IAAAA,QAAQ,EAAE,CAACX,WAFC;AAGZT,IAAAA,aAHY;AAIZC,IAAAA,gBAJY;AAKZQ,IAAAA,WALY;AAMZE,IAAAA,SANY;AAOZI,IAAAA,cAPY;AAQZE,IAAAA;AARY,GAAd;AAWA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,KAA7B;AAAA,cAAqCtB;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;IAjDeD,Y;UACUL,e;;;KADVK,Y","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\"\nimport useLocalStorage from \"../hooks/useLocalStorage.js\"\nimport storeItems from \"../items.json\"\n\nconst CartContext = React.createContext()\n\nexport function useCart() {\n  return useContext(CartContext)\n}\n\nexport function CartProvider({ children }) {\n  const [cart, setCart] = useLocalStorage(\"cart\", [])\n  const [showCartItems, setShowCartItems] = useState(false)\n  const formattedCart = cart.map(entry => {\n    return { ...entry, item: storeItems.find(item => item.id === entry.itemId) }\n  })\n  const isCartEmpty = cart.length === 0\n\n  useEffect(() => {\n    if (isCartEmpty) setShowCartItems(false)\n  }, [isCartEmpty])\n\n  function addToCart(itemId, quantity = 1) {\n    setCart(prevCart => {\n      if (prevCart.some(entry => entry.itemId === itemId)) {\n        return prevCart.map(entry => {\n          if (entry.itemId === itemId)\n            return { ...entry, quantity: entry.quantity + quantity }\n          return entry\n        })\n      } else {\n        return [...prevCart, { itemId, quantity }]\n      }\n    })\n  }\n\n  function removeFromCart(itemId) {\n    setCart(prevCart => {\n      return prevCart.filter(entry => entry.itemId !== itemId)\n    })\n  }\n\n  function checkout() {\n    setCart([])\n    alert(\"Thank you for your purchase\")\n  }\n\n  const value = {\n    cart: formattedCart,\n    showCart: !isCartEmpty,\n    showCartItems,\n    setShowCartItems,\n    isCartEmpty,\n    addToCart,\n    removeFromCart,\n    checkout\n  }\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}